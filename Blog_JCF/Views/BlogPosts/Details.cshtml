@using Blog_JCF.Models
@using Microsoft.AspNet.Identity
@model BlogPost
@{
    var backGroundImage = "/img/post-sample-image.jpg";
    if (Model.MediaUrl != null)
    {
        backGroundImage = Model.MediaUrl;
    }
}
<header class="intro-header" style="background-image:url('@backGroundImage')">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="post-heading text-center">
                    <h1>@Html.DisplayFor(model => model.Title)</h1>
                    <h2 class="subheading">@Html.DisplayFor(model => model.Abstract)</h2>
                    @*<span class="meta">Posted by Caleb Fields on @Html.DisplayFor(model => model.Created)</span>*@
                </div>
            </div>
        </div>
    </div>
</header>


<!-- Post Content -->
<article>
    <div class="container">
        <div class="row text-center">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                @Html.Raw(Model.Body)
            </div>
        </div>
    </div>
</article>
<hr />


@foreach (var comment in Model.Comments)
{
    <div class="post-preview row text-center">
        <div class="col-12">
            @comment.Body
        </div>
        <div class="post-meta col-12">
            By @if (comment.Author.DisplayName == null)
            {@comment.Author.Email} @comment.Author.DisplayName on @comment.Created.ToString("M/d/yy")
        </div>
        <!--Must determine the proper call for the UserId (== comment.AuthorId)-->
        @if (User.IsInRole("Admin") || User.IsInRole("Moderator") || User.Identity.GetUserId() == comment.AuthorId)
            {
            @Html.ActionLink("Edit", "Edit", "Comments", new { Id = comment.Id }, new { @class = "btn btn-default" })
            @Html.ActionLink("Delete", "Delete", "Comments", new { Id = comment.Id }, new { @class = "btn btn-default" })
            }
    </div>
}
    <hr />
   
        <div class="form-group">
            @if (User.Identity.IsAuthenticated)
            {
                using (Html.BeginForm("Create", "Comments", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Slug)
                    @Html.Hidden("BlogPostId", Model.Id)
                    <div class="row">
                        
                        <div class="col-md-8">
                            <textarea class="container" name="CommentBody" placeholder="Add Comment..."></textarea>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-default" type="submit">Comment</button>
                        </div>
                    </div>
                    
                    
                }
            }
        </div>
  